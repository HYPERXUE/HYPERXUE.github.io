<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>springboot+mybatis and WX小程序</title>
      <link href="/2020/05/01/spbootnote/"/>
      <url>/2020/05/01/spbootnote/</url>
      
        <content type="html"><![CDATA[<h1 id="WX-promaster-program-springboot后台"><a href="#WX-promaster-program-springboot后台" class="headerlink" title="WX-promaster program(springboot后台)"></a>WX-promaster program(springboot后台)</h1><p>在慕课网上看到的教程，跟着配置的相关项目，实现后台的基本功能。</p><h2 id="项目的基本结构"><a href="#项目的基本结构" class="headerlink" title="项目的基本结构"></a>项目的基本结构</h2><p>Pom.xml:项目依赖配置<br>Resource文件夹:资源文件（相关配置 ）<br>Application.properties：springboot配置文件服务器，profile，日志，tomcat服务器等配置<br>使用mybatis还要建立一个mybatis-config.xml文件。在resource建立相关mapper对应关系。</p><h2 id="项目java-project-confighex"><a href="#项目java-project-confighex" class="headerlink" title="项目java/project/confighex"></a>项目java/project/confighex</h2><p>文件夹下的内容是mybatis和spring的服务配置.<br>DAO层的配置<br>DataSourceConfigration：配置的是jdbc（数据库）相关的值 变量都是从application.properties中获取的。<br>SessionFactoryConfigration：SqlSessionFactory 有一个唯一的必要属性：用于 JDBC 的 DataSource。<br>service层：spring的事务管理。当我们使用了spring-boot-starter-jdbc依赖的时候，框 架会自动默认注入DataSourceTransactionManager。所以我们不需要任何额外 配置就可以用@Transactional注解进行事务的使用。<br>通过使用@Autowired    private DataSource dataSource;把DataSourceConfigration配置的jdbc属性装配进去然后加入<br>Autowired是根据类型（byType）进行自动装配的。注意:com.mchange.v2.c3p0.ComboPooledDataSource是继承DataSource<br>多个 bean 时，是根据 Student 的变量名自动匹配 bean id！</p><h2 id="具体底层的实现"><a href="#具体底层的实现" class="headerlink" title="具体底层的实现"></a>具体底层的实现</h2><p>dao：areadao 操作数据库的接口 通过MAPPER文件AreaDao.xml映射实现。<br>entity：应用层实现的方法</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly_Note</title>
      <link href="/2020/01/19/bflynote/"/>
      <url>/2020/01/19/bflynote/</url>
      
        <content type="html"><![CDATA[<h1 id="BUTTERFLY-NOTE"><a href="#BUTTERFLY-NOTE" class="headerlink" title="BUTTERFLY NOTE"></a>BUTTERFLY NOTE</h1><h2 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h2><pre><code>由于替换了主页的index图片原来设置的滚动字幕sitesubtitle和菜单栏的颜色变模糊了,所以研究了一下要怎么修改。</code></pre><p>PUG文件相当于是一个个HTML的类。因为PUG其实就是原来的JADE文件。<br>观察themes主题里的source文件夹，里面有CSS,IMG,JS三个文件夹。整个主题的CSS就是在这个文件夹。在这个文件夹里搜索相关的CLASS就能够找到对应的样式。搜索site-sub-title就能找到他的样式在head.styl中，当中有color这个属性。color的变量值作者定义在var.styl中打开这个文件可以自己添加想要的变量。同样的菜单栏的样式side-page也在head.stle中。</p><h2 id="插件源码修改"><a href="#插件源码修改" class="headerlink" title="插件源码修改"></a>插件源码修改</h2><pre><code>因为打字效果subtitle的内容我改了所以想修改一下这个打字效果的属性。上网查看这个插件的代码属性然后搜索SUBTITLE在index.pug找到</code></pre><p>对应的设置:startdelay,typespeed.当然你也可以在这里添加这个插件的其他属性。</p><h2 id="插件测试"><a href="#插件测试" class="headerlink" title="插件测试"></a>插件测试</h2><div class="bili_video"><iframe src="//player.bilibili.com/player.html?aid=84292549" "" height="452" width="544" quality="high" allowfullscreen="true" scrolling="no" border="0" frameborder="no" framespacing="0"></iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后端mysql安装过程</title>
      <link href="/2020/01/18/mysql/"/>
      <url>/2020/01/18/mysql/</url>
      
        <content type="html"><![CDATA[<p>M</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前言</title>
      <link href="/2020/01/18/hello-world/"/>
      <url>/2020/01/18/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="世事变改"><a href="#世事变改" class="headerlink" title="世事变改"></a>世事变改</h1><p>在csdn也有博客，不过荒废很久了。社会的现实，人生辗转。这个博客就来记录一些不一样的，多年的肥宅兴趣。</p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p>十多年下来真是阅片无数。越看越挑，而且看的品味也在变。活着就是改变。</p><h2 id="其他技术"><a href="#其他技术" class="headerlink" title="其他技术"></a>其他技术</h2><p>在CSDN的博客是刚毕业时候的技术总结主要是单片机，VC也有。这里有空还是总结下其他东西吧。</p><h2 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h2><p>生活中会有一些突然的想法感悟，决定写在这里了。</p><p>date: 2017-10-31 20:38:1date: 2017-10-31 20:38:17</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
